#!/bin/sh
### BEGIN INIT INFO
# Provides:       direwolf
# Required-Start: $network $remote_fs $syslog
# Required-Stop:  $network $remote_fs $syslog
# Default-Start:  2 3 4 5
# Default-Stop:   0 1 6
# Description:    APRS and TNC server
### END INIT INFO

set +e   # Don't exit on error status

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/local/bin/direwolf
CONFIG_FILE=/home/pi/direwolf.conf
NAME=direwolf
DESC="TNC and APRS server"

test -e /etc/direwolf.d/README || exit 0

test -x $DAEMON || exit 0

# Provide skeleton LSB log functions for backports which don't have LSB functions.
if [ -f /lib/lsb/init-functions ]; then
         . /lib/lsb/init-functions
else
         log_warning_msg () {
            echo "${@}."
         }

         log_success_msg () {
            echo "${@}."
         }

         log_daemon_msg () {
            echo -n "${1}: $2"
         }

	 log_end_msg () {
            if [ $1 -eq 0 ]; then
              echo "."
            elif [ $1 -eq 255 ]; then
              /bin/echo -e " (warning)."
            else
              /bin/echo -e " failed!"
            fi
         }
fi


if [ ! "$DIREWOLF_USER" ]; then
   DIREWOLF_USER="pi"
fi

start()
{
        # Return
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started

        # /var/run may be volatile, so we need to ensure that
        # /var/run/direwolf exists here as well as in postinst
        if [ ! -d /var/run/direwolf ]; then
           mkdir /var/run/direwolf || return 2
           chown pi:nogroup /var/run/direwolf || return 2
        fi

	start-stop-daemon --start --quiet --pidfile /var/run/direwolf/$NAME.pid --exec $DAEMON -- \
	nohup $DAEMON \
	-t 0 \
	${CONFIG_FILE:+ -c $CONFIG_FILE} > /home/pi/direwolf.output 2>&1 & \
	echo $! > /var/tun/direwolf/$NAME.pid
}


stop()
{
	# Return
	#   0 if daemon has been stopped
	#   1 if daemon was already stopped
	#   2 if daemon could not be stopped
	#   other if a failure occurred
	start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile /var/run/direwolf/$NAME.pid --name $NAME
}

status()
{
	# Return
	#   0 if daemon is running
	#   1 if daemon is dead and pid file exists
	#   3 if daemon is not running
	#   4 if daemon status is unknown
	start-stop-daemon --start --quiet --pidfile /var/run/direwolf/$NAME.pid --exec $DAEMON --test > /dev/null
	case "$?" in
		0) [ -e "/var/run/direwolf/$NAME.pid" ] && return 1 ; return 3 ;;
		1) return 0 ;;
		*) return 4 ;;
	esac
}

case "$1" in
  start)
	test "$ENABLED" != "0" || exit 0
	log_daemon_msg "Starting $DESC" "$NAME"
	start
	case "$?" in
		0)
			log_end_msg 0
			exit 0
			;;
		1)
			log_success_msg "(already running)"
			exit 0
			;;
		*)
			log_end_msg 1
			exit 1
			;;
	esac
	;;
  stop)
	if [ "$ENABLED" != "0" ]; then
             log_daemon_msg "Stopping $DESC" "$NAME"
	fi
	stop
        RETVAL="$?"
	if [ "$ENABLED" = "0" ]; then
	    case "$RETVAL" in
	       0) log_daemon_msg "Stopping $DESC" "$NAME"; log_end_msg 0 ;;
            esac 
	    exit 0
	fi
	case "$RETVAL" in
		0) log_end_msg 0 ; exit 0 ;;
		1) log_warning_msg "(not running)" ; exit 0 ;;
		*) log_end_msg 1; exit 1 ;;
	esac
	;;
  restart|force-reload)
	log_daemon_msg "Restarting $DESC" "$NAME"
	case "$RETVAL" in
		0|1)
		        sleep 2
			start
			case "$?" in
				0)
					log_end_msg 0
					exit 0
					;;
			        *)
					log_end_msg 1
					exit 1
					;;
			esac
			;;
		*)
			log_end_msg 1
			exit 1
			;;
	esac
	;;
  status)
	log_daemon_msg "Checking $DESC" "$NAME"
	status
	case "$?" in
		0) log_success_msg "(running)" ; exit 0 ;;
		1) log_success_msg "(dead, pid file exists)" ; exit 1 ;;
		3) log_success_msg "(not running)" ; exit 3 ;;
		*) log_success_msg "(unknown)" ; exit 4 ;;
	esac
	;;
  dump-stats)
        kill -s USR1 `cat /var/run/direwolf/$NAME.pid`
	;;
  systemd-exec)
# /var/run may be volatile, so we need to ensure that
        # /var/run/direwolf exists here as well as in postinst
        if [ ! -d /var/run/direwolf ]; then
           mkdir /var/run/direwolf || return 2
           chown pi:nogroup /var/run/direwolf || return 2
        fi
	nohup $DAEMON \
	-t 0 \
	    ${CONFIG_FILE:+ -c $CONFIG_FILE} > /home/pi/direwolf.output 2>&1 & \
	echo $! > /var/run/direwolf/$NAME.pid
	;;
  *)
	echo "Usage: /etc/init.d/$NAME {start|stop|restart|force-reload|dump-stats|status}" >&2
	exit 3
	;;
esac

exit 0